
import os
import subprocess
import pdb
import swap
from optparse import OptionParser

'''
Need to run SWAP.py multiple times -- once for every "day" in GZ2
Take that output and feed it into my machine classifiers
Take that output and determine retirement

'''

parser = OptionParser()
parser.add_option("-n", "--new", action="store_true", dest="startup", 
                  default=False, help="start new SWAPSHOP with startup.config")
parser.add_option("-c","--config", dest="config_name", 
                  help='Addendum to the config filename')
parser.add_option("-d", "--dir", dest="directory_name", default=None,
                  help="Store all output in DIR", metavar="DIR")

(options, args) = parser.parse_args()


print ""
#-------------------------------------------------------------------
# Open the config file if provided or generate a generic one

try:
    config = options.config_name
except:
    print "SWAPSHOP: no config file was provided; using generic config"
    # call a generic config file maker? 
    config = "startup.config"

the = swap.Configuration(config)

#-------------------------------------------------------------------
# Check whether we're running the Machine after SWAP

try:
    machine = the.parameters['machine']
except:
    machine = False

print "SWAPSHOP: running MachineClassifier.py after SWAP.py? "+str(machine)


#-------------------------------------------------------------------
# Is this a new run or are we picking up from where we left off? 

try:
    count = int(subprocess.check_output("find %s*/ -maxdepth 1 -type d -print "\
                                       "| wc -l"%the.parameters['survey'], 
                                        shell=True))
except:
    count = 0

print "SWAPSHOP: found %i directories from a previous run."%count


#-------------------------------------------------------------------
# Choose a location for the logfiles which are generated by SWAP each "day"

if options.directory_name: 
    log_dir = "logfiles_%s"%(options.directory_name)
else: 
    log_dir = "logfiles"

# Ensure that this directory exists
if not os.path.exists(log_dir): os.makedirs(log_dir)

print "SWAPSHOP: storing logfiles in %s"%log_dir


#-------------------------------------------------------------------
# Initialize the loop.

more_to_do = True

while more_to_do:

    # Define "today's" logfile name -- the count specifies which day
    logfile = "%s/GZ2_%i.log"%(log_dir,count)

    # run SWAP.py with the chosen configfile (and specific logfile?)
    #os.system("python SWAP.py %s > %s"%(config,logfile))
    os.system("python SWAP.py %s"%(config))

    if machine:
        # ALWAYS run MachineClassifier.py with update.config!
        os.system("python MachineClassifier.py -c update.config")

    # Increment the day
    count+=1

    # Check if SWAP.py set the "keep going" cookie to False
    #more = os.system("grep 'running' .swap.cookie | wc -l")
    if int(subprocess.check_output("grep 'running' .swap.cookie | wc -l", 
                                   shell=True)):
        try: config = options.config_name.replace('startup','update')
        except: config = "update.config"
        print "SWAPSHOP: ran SWAP.py %i times"%count
        print "SWAPSHOP: still more to do!"
        print ""

    else:
        more_to_do = False
        print "That's the last one!"

